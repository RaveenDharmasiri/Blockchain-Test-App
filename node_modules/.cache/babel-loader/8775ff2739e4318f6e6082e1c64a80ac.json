{"ast":null,"code":"import _toConsumableArray from \"/Users/raveen/Ethereum/Blockchain-Test-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/raveen/Ethereum/Blockchain-Test-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/raveen/Ethereum/Blockchain-Test-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/raveen/Ethereum/Blockchain-Test-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/raveen/Ethereum/Blockchain-Test-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/raveen/Ethereum/Blockchain-Test-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/raveen/Ethereum/Blockchain-Test-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/raveen/Ethereum/Blockchain-Test-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/raveen/Ethereum/Blockchain-Test-App/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport SocialNetwork from '../abis/SocialNetwork.json';\nimport Navbar from './Navbar';\nimport Identicon from 'identicon.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, socialNetwork, postCount, i, post;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3; //Load account\n\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                }); // Network Id\n\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                networkData = SocialNetwork.networks[networkId];\n\n                if (!networkData) {\n                  _context3.next = 30;\n                  break;\n                }\n\n                socialNetwork = new web3.eth.Contract(SocialNetwork.abi, networkData.address);\n                this.setState({\n                  socialNetwork: socialNetwork\n                });\n                _context3.next = 15;\n                return socialNetwork.methods.postCount().call();\n\n              case 15:\n                postCount = _context3.sent;\n                this.setState({\n                  postCount: postCount\n                });\n                console.log(postCount);\n                i = 1;\n\n              case 19:\n                if (!(i <= postCount)) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                _context3.next = 22;\n                return socialNetwork.methods.posts(i).call();\n\n              case 22:\n                post = _context3.sent;\n                this.setState({\n                  posts: [].concat(_toConsumableArray(this.state.posts), [post])\n                });\n\n              case 24:\n                i++;\n                _context3.next = 19;\n                break;\n\n              case 27:\n                console.log(this.state.posts[0]);\n                _context3.next = 31;\n                break;\n\n              case 30:\n                window.alert('SocialNetwork contract not deployed to detected network');\n\n              case 31:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '',\n      socialNetwork: null,\n      postCount: 0,\n      posts: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 ml-auto mr-auto\",\n        style: {\n          maxWidth: '500px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/raveen/Ethereum/Blockchain-Test-App/src/components/App.js"],"names":["React","Component","Web3","SocialNetwork","Navbar","Identicon","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","console","log","setState","account","net","getId","networkId","networkData","networks","socialNetwork","Contract","abi","address","methods","postCount","call","i","posts","post","state","props","loading","maxWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport SocialNetwork from '../abis/SocialNetwork.json';\nimport Navbar from './Navbar';\nimport Identicon from 'identicon.js';\n\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n\n    //Load account\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    this.setState({ account: accounts[0] });\n\n    // Network Id\n    const networkId = await web3.eth.net.getId();\n    const networkData = SocialNetwork.networks[networkId];\n\n    if (networkData) {\n      const socialNetwork = new web3.eth.Contract(SocialNetwork.abi, networkData.address);\n      this.setState({ socialNetwork: socialNetwork });\n      const postCount = await socialNetwork.methods.postCount().call();\n      this.setState({ postCount: postCount });\n      console.log(postCount);\n\n      for (var i = 1; i <= postCount; i++) {\n        const post = await socialNetwork.methods.posts(i).call();\n        this.setState({\n          posts: [...this.state.posts, post]\n        });\n      }\n\n      console.log(this.state.posts[0]);\n    } else {\n      window.alert('SocialNetwork contract not deployed to detected network');\n    }\n\n    // Address\n\n    //ABI\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      socialNetwork: null,\n      postCount: 0,\n      posts: [],\n      loading: true\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{maxWidth:'500px'}}>\n              <div className=\"content mr-auto ml-auto\">\n                {/* {this.state.posts.map((post, key) => {\n                  return (\n                    <div className=\"card mb-4\" key={key} >\n                      <div className=\"card-header\">\n                        <img\n                          className='mr-2'\n                          width='30'\n                          height='30'\n                          src={`data:image/png;base64,${new Identicon(post.author, 30).toString()}`}\n                        />\n                        <small className=\"text-muted\">{post.author}</small>\n                      </div>\n                      <ul id=\"postList\" className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">\n                          <p>{post.content}</p>\n                        </li>\n                        <li key={key} className=\"list-group-item py-2\">\n                          <small className=\"float-left mt-1 text-muted\">\n                            TIPS: {window.web3.utils.fromWei(post.tipAmount.toString(), 'Ether')} ETH\n                        </small>\n                          <button\n                            className=\"btn btn-link btn-sm float-right pt-0\"\n                            name={post.id}\n                            onClick={(event) => {\n                              let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\n                              console.log(event.target.name, tipAmount)\n                              this.props.tipPost(event.target.name, tipAmount)\n                            }}\n                          >\n                            TIP 0.1 ETH\n                        </button>\n                        </li>\n                      </ul>\n                    </div>\n                  )\n                })} */}\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}